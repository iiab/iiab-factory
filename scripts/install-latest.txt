#!/bin/bash -x -e
# This script was obtained from: http://github.com/jvonau/iiab-factory/install-latest.txt

IIAB_RELEASE="master"
ADMIN_RELEASE="master"
CONF_FILE=/etc/iiab/local_vars.yml
BASE=/opt/iiab
REINSTALL=""
SUPPORT=""
set -e                                   # Exit on error (avoids snowballing)
export DEBIAN_FRONTEND=noninteractive    # Bypass (most!) interactive questions
echo -e "\n   █████████████████████████████████████████████████████████████████████████"
echo -e "   ██ TRY TO RERUN THIS ENTIRE SCRIPT IF IT FAILS DUE TO CONNECTIVITY ETC ██"
echo -e "   █████████████████████████████████████████████████████████████████████████\n\n"

mkdir -p /etc/iiab
if [ -f $BASE/iiab/vars/local_vars.yml ]; then
    # FUTURE: Test if their local_vars.yml is sufficiently version-compatible !
    echo -e "\n\n  EXISTING $BASE/iiab/vars/local_vars.yml will be moved to reinstall Internet-in-a-Box\n"
    mv $BASE/iiab/vars/local_vars.yml /etc/iiab/local_vars.yml
    REINSTALL="--reinstall"
elif [ -f /etc/iiab/local_vars.yml ]; then
    # FUTURE: Test if their local_vars.yml is sufficiently version-compatible !
    echo -e "\n\n  EXISTING /etc/iiab/local_vars.yml will be used to install Internet-in-a-Box\n"
    echo -e "   🚂 🚃 🚄 🚅 🚆 🚇 🚈 🚉 🚊 🚋 🚌 🚍 🚎 🚏 🚐 🚑 🚒 🚚 🚛 🚜 🚞 🚟 🚠 🚡 🚲\n"
    echo -e "             See http://wiki.iiab.io/local_vars.yml to learn more!\n"
else
    echo -e "\nInstalling Internet-in-a-Box requires /etc/iiab/local_vars.yml"
    echo -e "PLEASE SEE http://wiki.iiab.io/local_vars.yml TO LEARN MORE!\n"

    echo -e "Do you want (1) 🚵 MIN-sized (2) 🚢🚣 MEDIUM-sized or (3) 🚂🚃🚃 BIG-sized?"

    echo -e "\nThese generally take about 1, 2 or 3 hours to complete -- depending"
    echo -e "on Internet speed, CPU speed/temperature and microSD card/disk speed.\n"

    echo -e "IN FUTURE: you might choose to pre-position your own customized"
    echo -e "/etc/iiab/local_vars.yml prior to running this script.\n"

    echo -n "Please type 1, 2 or 3 then press [ENTER]: "
    read local_vars_size < /dev/tty
    echo

    echo -e "Do you want to enable vpn support?"
    echo -n "Please type y/n then press [ENTER]: "
    read vpn < /dev/tty

    if [ $vpn = 'y' ]; then
        SUPPORT="_vpn"
    fi
fi

if grep -qi raspbian /etc/*release; then tune2fs -m 1 /dev/mmcblk0p2; fi
# If OS is Raspbian, lowers reserve disk space from ~5% to 1%

apt update
apt -y install git

mkdir -p $BASE
cd $BASE/

# Installs latest Ansible-2.6.x from PPA.
if [ -d iiab-factory ]; then
    echo -e 'iiab-factory auto update'
    cd $BASE/iiab-factory/
    git pull origin master
    $BASE/iiab-factory/scripts/ansible-2.6.x
else
#    git clone https://github.com/iiab/iiab-factory --depth 1
    git clone https://github.com/jvonau/iiab-factory --depth 1
    $BASE/iiab-factory/scripts/ansible-2.6.x
fi
cd $BASE/
if [ -d iiab ]; then
    echo -e 'iiab auto update'
    cd $BASE/iiab
    git pull origin $IIAB_RELEASE
else
    git clone https://github.com/iiab/iiab --branch $IIAB_RELEASE --depth 1
    if [ ! -f /etc/iiab/local_vars.yml ]; then
        cd $BASE/iiab
        case $local_vars_size in
            1)
            cp vars/local_vars_min$SUPPORT.yml /etc/iiab/local_vars.yml
                ;;
            3)
            cp vars/local_vars_big$SUPPORT.yml /etc/iiab/local_vars.yml
                ;;
            2)
            cp vars/local_vars_medium$SUPPORT.yml /etc/iiab/local_vars.yml
                ;;
        esac
    fi
fi

# Installs Admin Console
cd $BASE
if [ -d iiab-admin-console ]; then
    echo -e 'iiab-admin-console auto update'
    cd $BASE/iiab-admin-console/
    git pull origin $ADMIN_RELEASE
else
    git clone https://github.com/iiab/iiab-admin-console --branch $ADMIN_RELEASE --depth 1
fi

# Installs Dynamic Menuing for /library/www/html/home/index.html
if [ -d iiab-menu ]; then
    echo -e '\nREPO EXISTS? Consider "cd $BASE/iiab-menu; git pull; ./cp-menus"'
else
    git clone https://github.com/iiab/iiab-menu --depth 1
fi

if [ x$SUPPORT = "x_vpn" ]; then
    cd $BASE/iiab/
    ./install-support
fi

# replace with ansible role WIP
cp $BASE/iiab-factory/roles/iiab-installer/files/iiab-installer.service /etc/systemd/system/
systemctl enable iiab-installer

cd $BASE/iiab/
./iiab-install $REINSTALL

echo -e '"apt update" is checking for updates...\n'
apt -qq update > /tmp/apt.stdout
if [ $(wc -c < /tmp/apt.stdout) -gt 29 ]; then
    apt -y dist-upgrade
    reboot
fi

# If we didn't reboot just continue with the rest of the install
$BASE/iiab-factory/scripts/continue.sh $REINSTALL
