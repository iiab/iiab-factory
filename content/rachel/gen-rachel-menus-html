#!/opt/iiab/admin/venv/bin/python2

"""

   Reads rachel menu fragments for every item in catalog at http://dev.worldpossible.org/cgi/json_api_v1.pl

   Author: Tim Moody <tim(at)timmoody(dot)com>

"""
import xml.etree.ElementTree as ET
import json
import csv
import operator
import base64
import os.path
import sys
import urllib2
import time
import re

rachel_catalog_url = "http://dev.worldpossible.org/cgi/json_api_v1.pl"
response = urllib2.urlopen(rachel_catalog_url)
rachel_catalog = json.loads(response.read())
response.close()

for module in rachel_catalog:
    #print module
    onemod = module
    onemod['intended_use'] = 'html'
    onemod['extra_html'] = module['moddir']
    logo = module['logo_url']
    logo_ext = logo.split('/')[-1].split('.')[-1]
    logo = module['moddir'] + '.' + logo_ext
    onemod['logo_url'] = logo

    with open('menu-defs/' + module['moddir'] + '.json', 'w') as fp:
        json.dump(onemod, fp)

p = re.compile('\<\?php echo .+? \?>')

for phpfile in os.listdir('menu-blocks'):
    with open('menu-blocks/' + phpfile, 'r') as fp:
        php = fp.read()
    print php
    ulpos = php.find('<ul')
    divpos = php.find('</div>',ulpos)
    if ulpos != -1:
        htmlfile = phpfile.split('.php')[0] + '.html'
        php_frag = php[ulpos:divpos]
        print php_frag
        html = re.sub(p,"##HREF-BASE##", php_frag)
        with open('menu-html/' + htmlfile, 'w') as fp:
            fp.write(html)



\<\?php echo \$dir \?>
\<\?php echo .+? \?>





"""

   Creates library.xml file for kiwix from contents of /zims/content and index
   This is xsce-make-kiwix-lib with hard-coded paths

   Author: Tim Moody <tim(at)timmoody(dot)com>

"""

import os, sys, syslog
import pwd, grp
import time
from datetime import date, datetime
import json
import yaml
import re
import subprocess
import shlex
import ConfigParser

# Config Files
xsce_config_file = "/etc/xsce/xsce.ini"

# Variables that should be read from config file
# All of these variables will be read from config files and recomputed in init()
xsce_zim_path = "/library/zims"
kiwix_library_xml = "/library/zims/library.xml"

xsce_base_path = "/opt/schoolserver"
kiwix_manage = xsce_base_path + "/kiwix/bin/kiwix-manage"

def main():
    # Allow target to be entered from command line

    if len(sys.argv) > 1:
        xsce_zim_path = sys.argv[1]
        kiwix_library_xml = xsce_zim_path + "/library.xml"

    #init()

    # remove existing file
    try:
        os.remove(kiwix_library_xml)
    except OSError:
        pass

    # add each file in /library/zims/content with corresponding index
    # only add a single .zim for each .zimxx file

    files_processed = {}
    content = xsce_zim_path + "/content/"
    index = xsce_zim_path + "/index/"

    for filename in os.listdir(content):
        zimpos = filename.find(".zim")
        if zimpos != -1:
            filename = filename[:zimpos]
            if filename not in files_processed:
                files_processed[filename] = True
                command = kiwix_manage + " " + kiwix_library_xml + " add " + content + filename + ".zim -i " + index + filename + ".zim.idx"
                #print command
                args = shlex.split(command)
                outp = subprocess.check_output(args)

    sys.exit()

def init():

    global xsce_base_path
    global xsce_zim_path
    global kiwix_library_xml
    global kiwix_manage

    config = ConfigParser.SafeConfigParser()
    config.read(xsce_config_file)
    xsce_base_path = config.get('location','xsce_base')
    xsce_zim_path = config.get('kiwix-serve','xsce_zim_path')
    kiwix_library_xml = config.get('kiwix-serve','kiwix_library_xml')
    kiwix_manage = xsce_base_path + "/kiwix/bin/kiwix-manage"

# Now start the application

if __name__ == "__main__":

    # Run the main routine
    main()
